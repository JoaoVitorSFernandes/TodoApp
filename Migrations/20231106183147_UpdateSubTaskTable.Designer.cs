// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Data;

#nullable disable

namespace TodoApp.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20231106183147_UpdateSubTaskTable")]
    partial class UpdateSubTaskTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("TodoApp.Models.SubTodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("Date")
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<bool>("Favorite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Title");

                    b.Property<int>("TodoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id")
                        .HasName("PK_SubTaskId");

                    b.HasIndex("TodoId")
                        .IsUnique();

                    b.ToTable("SubTask", (string)null);
                });

            modelBuilder.Entity("TodoApp.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("Date")
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<bool>("Favorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("Favorite");

                    b.Property<int>("ListTasksId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Title");

                    b.HasKey("Id")
                        .HasName("PK_TaskId");

                    b.HasIndex("ListTasksId");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("TodoApp.Models.Todos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("PK_TasksId");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("TodoApp.Models.SubTodo", b =>
                {
                    b.HasOne("TodoApp.Models.Todo", "Todo")
                        .WithOne("SubTodo")
                        .HasForeignKey("TodoApp.Models.SubTodo", "TodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SubTask_Task");

                    b.Navigation("Todo");
                });

            modelBuilder.Entity("TodoApp.Models.Todo", b =>
                {
                    b.HasOne("TodoApp.Models.Todos", "ListTasks")
                        .WithMany("Tasks")
                        .HasForeignKey("ListTasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Tasks_Task");

                    b.Navigation("ListTasks");
                });

            modelBuilder.Entity("TodoApp.Models.Todo", b =>
                {
                    b.Navigation("SubTodo")
                        .IsRequired();
                });

            modelBuilder.Entity("TodoApp.Models.Todos", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
